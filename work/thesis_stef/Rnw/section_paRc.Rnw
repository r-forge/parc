\section{paRc---PARallel Computations in R}
\label{sec:paRc}

In the course of this thesis a package called \pkg{paRc}
(\cite{theussl07paRc}) has been developed with the aim
to evaluate performance of parallel applications and to show how
interfacing high performance applications written in C can be done
using OpenMP~(see Section~\ref{sec:OpenMP}).

The package \pkg{paRc} contains interface functions to the OpenMP library
and provides high level function to a few C implementations of
parallel applications using OpenMP (e.g., matrix multiplication---see Chapter~\ref{chap:matrix}).
Furthermore, it supplies a benchmark environment for performance
evaluation of parallel programs and a framework for pricing options
with parallel Monte Carlo simulation (see
Chapter~\ref{chap:options}).

\pkg{paRc} can be obtained from \url{R-Forge.R-project.org}---the
R-project community service. To install this package directly within R
call \code{install.packages("paRc", repos = "R-Forge.r-project.org")}.
To properly install this package you need either the Intel compiler
with version 9.1 or newer (the Linux compiler is free for
non-commercial use) or the GNU~C compiler with version 4.2 or
newer. They are known to support OpenMP.

Examples in this section are produced on a bignode of
cluster@WU. Bignodes provide a shared memory platform with up to 4
CPUs. Shared memory platforms are necessary for running parallel
OpenMP applications.

\subsection{OpenMP Interface Functions}

The user is provided with a few interface functions to the OpenMP
library. They are used to query the internal variables of the compiled
parallel environment or to change them.

\subsubsection{OpenMP routines}
\begin{description}
\item[\texttt{omp.get.num.procs()}] returns the number of threads
  available to the program.
\item[\texttt{omp.set.num.threads()}] sets the number of threads to be
  used in subsequent parallel executions.
\item[\texttt{omp.get.max.threads()}] gets the number of threads to be
  used in subsequent parallel executions.
\end{description}

\subsubsection{OpenMP specific environment variables}

Moreover, environment variables can affect the runtime behaviour of
OpenMP programs. These environment variables are~(\cite{openMP05}):

\begin{description}
\item[\texttt{OMP\_NUM\_THREADS}] sets the number of threads to use in
  parallel regions of OpenMP programs. 
\item[\texttt{OMP\_SCHEDULE}] sets the runtime schedule type and
  chunk size.
\item[\texttt{OMP\_DYNAMIC}] defines wether dynamic adjustments of threads
  should be used in parallel regions.
\item[\texttt{OMP\_NESTED}] enables or disables nested parallelism.
\end{description}

Example~\ref{ex:paRcOMP} shows the use of the OpenMP library calls in
R. First the number of available processors is queried. Then the
number of threads a parallel application may use is set to 2. With the
last call the current available CPUs to a parallel program is queried.

\begin{Example} OpenMP function calls using \pkg{paRc}
\label{ex:paRcOMP}
<<echo=TRUE>>=
library("paRc")

omp.get.num.procs()

omp.set.num.threads(2)

omp.get.max.threads()

@ 
\end{example}

\subsection{High Level OpenMP Functions}

\pkg{paRc} provides the following high level OpenMP function: 

\begin{description}
\item[\texttt{omp.matrix.mult(X, Y, ncpu = 1)}] multiplies the matrix
  \code{X} with matrix \code{Y} using \code{n\_cpu} numbers of
  processors.
\end{description}

\subsection{Benchmark}

\pkg{paRc} provides a benchmark environment for measuring the
performance of parallel programs. Two main functions exist in this
context---one for creating a benchmark object and one for running the
benchmark described by the object.

\subsubsection{Main routines}
\begin{description}
\item[\code{create.benchmark()}]
\item[\code{run.benchmark()}]
\end{description}


\subsubsection{Extractor and Replacement Functions}
\begin{description}
\item[\code{bm.cpu.range}]
\item[\code{bm.data}]
\item[\code{bm.is.parallel}]
\item[\code{bm.task}]
\item[\code{bm.tasks}]
\item[\code{bm.type}]
\item[\code{bm.types}]

\end{description}

\subsubsection{Generic}

\begin{description}
\item[\code{speedup}]
\end{description}

\subsubsection{S3 methods}

\begin{description}
\item[\code{print.benchmark}]
\item[\code{plot.bm_results}]
\item[\code{speedup.default}]
\item[\code{speedup.numeric}]
\item[\code{speedup.bm_results}]
\end{description}

\subsection{Environment for Option Pricing}

To complete the set of important functions supplied by package
\pkg{paRc} the following functions have to be explained:

\subsubsection{Main routines}
\begin{description}
\item[\code{define.option()}]
\item[\code{blackscholesprice(x)}]
\item[\code{monteCarloSimulation(x)}]
\item[\code{mcs.Rmpi}]
\end{description}


\subsubsection{Extractor and Replacement Functions}
\begin{description}
\item[\code{maturity}]
\item[\code{strikeprice}]
\item[\code{underlying}]
\item[\code{optiontype}]
\item[\code{optionclass}]
\item[\code{priceof}]
\item[\code{position}]
\end{description}

\subsubsection{S3 methods}

\begin{description}
\item[\code{print.option}]
\item[\code{plot.option}]
\end{description}

\subsection{Other Functions}

\begin{description}
\item[\code{serial.matrix.mult(X,Y)}]
\end{description}

\subsection{Conclusion}
